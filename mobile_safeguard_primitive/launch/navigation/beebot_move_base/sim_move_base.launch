<launch>
<!--
This file is used to simulate move_base in actual environmnet. 
-->

  <param name="/use_sim_time" value="true"/>

  <arg name="broadcast_tf" default="false"/>
  <arg name="scan_topic" default="/scan" />

  <!-- LAUNCH SIMULATION ENVIRONMENT-->
  <!-- fire up Gazebo and Rviz for simulation and visualization-->
  <include file="$(find simulation_tobot)/beebot_control/launch/beebot_control.launch">
     <arg name="world_file" value="$(find simulation_tobot)/maps/my_test_map.world" />
  </include>

  <!-- WE USE HECTOR_SLAM INSTEAD OF GMAPPING-->
  <!-- We use Hector mapping to generate odometry for us -->
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    
    <!-- Frame names -->
    <param name="map_frame" value="map" />
    <param name="base_frame" value="base_link" />
    <param name="odom_frame" value="odom" />
    
    <!-- Tf use -->
    <param name="pub_map_odom_transform" value="$(arg broadcast_tf)"/>
    <param name="pub_map_scanmatch_transform" value="false"/>
    <param name="pub_odometry" value="true"/>
    
    <!-- Map size / start point -->
    <param name="map_resolution" value="0.050"/>
    <param name="map_size" value="2048"/>
    <param name="map_multi_res_levels" value="2" />
    
    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />
    <param name="map_update_distance_thresh" value="0.4"/>
    <param name="map_update_angle_thresh" value="0.06" />
    
    <!-- Advertising config --> 
    <param name="scan_topic" value="$(arg scan_topic)"/>
  </node>
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen">
    <param name="target_frame_name" type="string" value="/map" />
    <param name="source_frame_name" type="string" value="/base_link" />
    <param name="trajectory_update_rate" type="double" value="4" />
    <param name="trajectory_publish_rate" type="double" value="0.25" />
  </node>

  <node pkg="hector_geotiff" type="geotiff_node" name="hector_geotiff_node" output="screen" launch-prefix="nice -n 15">
    <remap from="map" to="/dynamic_map" />
    <param name="map_file_path" type="string" value="$(find hector_geotiff)/maps" />
    <param name="map_file_base_name" type="string" value="hector_slam_map" />
    <param name="geotiff_save_period" type="double" value="10" />
    <param name="draw_background_checkerboard" type="bool" value="true" />
    <param name="draw_free_space_grid" type="bool" value="true" />
  </node>

   <!--LAUNCH MOVE_BASE-->
   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true">
    <rosparam file="$(find mobile_safeguard_primitive)/launch/navigation/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find mobile_safeguard_primitive)/launch/navigation/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find mobile_safeguard_primitive)/launch/navigation/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find mobile_safeguard_primitive)/launch/navigation/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find mobile_safeguard_primitive)/launch/navigation/config/base_local_planner_params.yaml" command="load" />
   </node>

   <!-- LAUNCH TELEOPERATION AS LAST RESPORT OF CONTROL-->
   <!--Turn on teleoperation on keyboard-->
   <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_twist_keyboard"/>
</launch>
